name: CI/CD Maven + Docker + AWS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE: yourdockerhubusername/simple-java-maven-app

jobs:
  build-test-bump-docker:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Java
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      # Build and test Maven project
      - name: Build with Maven
        run: mvn clean package

      # --- Auto-version-bump logic (Patch version) ---
      - name: Auto-bump Patch Version in pom.xml
        id: bump
        run: |
          version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Current version: $version"
          IFS='.' read -r major minor patch <<< "$version"
          if [[ -z "$patch" ]]; then patch=0; fi
          new_version="$major.$minor.$((patch+1))"
          echo "Bumped version: $new_version"
          mvn versions:set -DnewVersion="$new_version"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      # Commit version bump (optional, but keeps the repo in sync)
      - name: Commit & Push new version
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: bump version to ${{ steps.bump.outputs.new_version }}"
          file_pattern: 'pom.xml'

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Docker image (multi-stage build)
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ steps.bump.outputs.new_version }}

  deploy-to-aws:
    needs: build-test-bump-docker
    runs-on: ubuntu-latest

    steps:
      # Deploy using SSH (you can use more advanced tools, e.g., ECS, if you wish)
      - name: Deploy to AWS EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_SSH_KEY }}
          script: |
            docker pull ${{ env.DOCKER_IMAGE }}:${{ needs.build-test-bump-docker.outputs.new_version }}
            docker stop myapp || true
            docker rm myapp || true
            docker run -d --name myapp -p 80:8080 ${{ env.DOCKER_IMAGE }}:${{ needs.build-test-bump-docker.outputs.new_version }}
